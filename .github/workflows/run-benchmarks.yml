name: Run Benchmarks

# Run this action when triggered manually through GitHub UI.
on:
  workflow_dispatch:
    inputs:
      timeout:
        required: true
        type: number
        default: 20
      engine:
        required: true
        type: choice
        default: abmc
        options:
        - abmc
        - adcl
        - bmc
      repo:
        required: true
        type: choice
        default: chc-comp22-benchmarks
        options:
        - chc-comp22-benchmarks
        - chc-comp23-benchmarks
      directory:
          required: true
          type: choice
          default: LIA-Lin
          options:
          - LIA-Lin
          - LIA-lin

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:

  chc-comp-benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ci_index: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
        ci_total: [20]
        include:
          - mode: reachability
            format: horn

    steps:
      - uses: actions/checkout@v4
        with:
          repository: chc-comp/${{ inputs.repo }}
          sparse-checkout: ${{ inputs.directory }}

      - run: gunzip ${{ inputs.directory }}/*.gz

      - uses: dawidd6/action-download-artifact@v3
        with:
          workflow: build-loat.yml
          name: loat-static
          path: /usr/local/bin/

      - name: Run Benchmark
        run: |
          # function to run a single benchmark
          function benchmark() {
            filename=$1
            printf "running ${filename} ... "
            start=`date +%s`

            set +e
            result=$(timeout ${{ inputs.timeout }} loat-static --mode ${{ matrix.mode }} --format ${{ matrix.format }} --proof-level 0 --engine ${{ inputs.engine }} "${filename}")
            exit_status=$?
            set -e

            end=`date +%s`
            runtime=$((end-start))

            if [[ $exit_status -eq 0 ]]; then
              result=$(echo "$result" | head -n 1)
            elif [[ $exit_status -eq 124 ]]; then
              result="timeout"
            else
              result="error"
            fi

            printf "${result} after ${runtime}s\n"

            echo ${result} > ${filename}.res
          }

          # make 'benchmark' available for 'parallel'
          export -f benchmark

          # permissions are not preserved for artifacts:
          chmod +x /usr/local/bin/loat-static

          cd ${{ inputs.directory }}

          # remove benchmarks that are executed by other workers
          i=0
          for filename in *.smt2; do
            if [[ $(( i % CI_TOTAL )) -ne $CI_INDEX ]]; then
              rm ${filename}
            fi
            i=$(( i+1 ))
          done

          # execute benchmarks in parallel
          parallel benchmark ::: *.smt2
        env:
          CI_TOTAL: ${{ matrix.ci_total }}
          CI_INDEX: ${{ matrix.ci_index }}

      - name: Upload Benchmark Results
        uses: actions/upload-artifact@master
        with:
          name: ${{ inputs.repo }}-${{ matrix.ci_index }}
          path: ${{ inputs.directory }}/*.res

  finalize-benchmark-results:
    needs: [chc-comp-benchmark]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.repo }}*
      - name: Merge Benchmark Results
        run: |
          declare -A results
          for filename in ${{ inputs.repo }}*/*.res; do
            benchmark=$(basename "$filename" .res)
            res=$(cat "$filename")
            results["$res"]=$((results["$res"]+1))
            echo "$benchmark: $res" >> ${{ inputs.repo }}.txt
          done
          sort -o ${{ inputs.repo }}.txt ${{ inputs.repo }}.txt
          for res in ${!results[@]}; do
              echo "{\"name\": \"${{ inputs.repo }} $res\", \"unit\": \"number\", \"value\": \"${results[$res]}\"}," >> ${{ inputs.repo }}.json
          done
      - uses: actions/upload-artifact@master
        with:
          name: ${{ inputs.repo }}
          path: ${{ inputs.repo }}.*

  publish-benchmark-results:
    needs: [finalize-benchmark-results]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - run: |
          echo "[" >> output.json
          cat ${{ inputs.repo }}/${{ inputs.repo }}.json >> output.json
          # remove trailing comma
          sed -i '$ s/,$//g' output.json
          echo "]" >> output.json
      - name: Publish benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: LoAT Benchmarks
          # What benchmark tool the output.txt came from
          tool: 'customBiggerIsBetter'
          # Where the output from the benchmark tool is stored
          output-file-path: output.json
          # Access token to deploy GitHub Pages branch
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Push and deploy GitHub pages branch automatically
          auto-push: true
          gh-pages-branch: web
          benchmark-data-dir-path: docs/dev/bench
